name: Tests

on: [push, pull_request]

jobs:
  test_linux:
    name: Run tests (Linux)
    runs-on: ubuntu-20.04
    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        rust-version: [stable, beta]
        allow-failure: [false]
        include:
          - rust-version: nightly
            allow-failure: true

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
      - name: Build
        run: cargo build -vv
      - name: Run tests
        run: cargo test -- --nocapture --test-threads=1

  test_macos:
    name: Run tests (macOS)
    runs-on: macos-latest
    strategy:
      matrix:
        rust-version: [stable]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
      - name: Install dependencies
        run: brew install llvm r
      - name: Set dynamic environment variables
        run: echo "LIBCLANG_PATH=$(brew --prefix llvm)/lib" >> $GITHUB_ENV
      - name: Build
        run: cargo build -vv
      - name: Run tests
        run: cargo test -- --nocapture --test-threads=1

  test_windows_x86:
    name: Run tests (Windows x86)
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      matrix:
        rust-version: [stable-gnu]
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          path-type: inherit
          release: false
          update: false
          install: >-
            mingw-w64-x86_64-clang
      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: 'release'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          target: x86_64-pc-windows-gnu
          default: true
          components: rustfmt, clippy
      - name: Build
        run: |
          cargo build -vv
        env:
          LIBCLANG_PATH: C:/msys64/mingw64/bin
      - name: Run tests
        run: |
          cargo test -- --nocapture --test-threads=1
        env:
          LIBCLANG_PATH: C:/msys64/mingw64/bin

  test_windows_i686:
    name: Run tests (Windows i686)
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      matrix:
        rust-version: [stable-gnu]
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          path-type: inherit
          release: false
          update: false
          install: >-
            mingw-w64-i686-clang
      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: 'release'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          target: i686-pc-windows-gnu
          default: true
          components: rustfmt, clippy
      - name: Switch toolchain default
        run: rustup target remove x86_64-pc-windows-gnu
      - name: Build
        run: |
          cargo build -vv --target i686-pc-windows-gnu
        env:
          LIBCLANG_PATH: C:/msys64/mingw32/bin
      - name: Run tests
        run: |
          cargo test --target i686-pc-windows-gnu -- --nocapture --test-threads=1
        env:
          LIBCLANG_PATH: C:/msys64/mingw32/bin
